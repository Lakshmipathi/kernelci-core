#!/usr/bin/env groovy
/*
 * DOCKER_BASE
 *   Dockerhub base address used for the build images
 */
@Library('kernelci') _

def docker_image = "${params.DOCKER_BASE}debos"
//def git_branch = "${params.GIT_BRANCH}"
def rootfs_config = "${params.CONFIG_NAME}"

pipeline {
  options { timestamps() }
  agent none

  stages {
      stage("checkout") {
         agent {
             label "docker" && "debos" && "builder"
          }

          steps {
         	checkout changelog: true, poll: true, scm: [
            	 $class: 'GitSCM',
	             branches: [[name: "${params.GIT_BRANCH}"]],
        	     extensions: [[$class: 'PruneStaleBranch']]
	        ]	
	 	script {
                	echo "Running ${env.BUILD_ID} with ${WORKSPACE}"
        	}	
	  }
	}

        stage("build rootfs") {
          agent {
            label 'docker'
          }

          steps {
            script {
                    docker.image("${docker_image}").inside("--device /dev/kvm"){ 
           		sh """
                           # python3 ./kci_rootfs build --config ${rootfs_config} \
			   # --data-path jenkins/debian/debos 
                           python3 ./kci_rootfs  upload --token ${params.KCI_TOKEN_ID} \
			   --api ${params.KCI_API_URL} --storage laks/test_uploads \
                           --rdir jenkins/debian/debos/scripts
			   """
		    }	
            }
          }
        post {
           always {
            //  archiveArtifacts artifacts: "jenkins/debian/debos/${rootfs_config}"
	      script{
                    echo "Cleanup workspace."
                    sh "ls && ls -R jenkins"
                    sh "rm -rf ${WORKSPACE}/*"
		}
           }
       }
    }
  }
}
